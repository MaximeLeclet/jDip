#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// dip.process.Adjudicator
	c5787 [label=<<table title="dip.process.Adjudicator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Adjudicator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Adjudicator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getTurnState() : TurnState </td></tr>
<tr><td align="left" balign="left"> + process() </td></tr>
<tr><td align="left" balign="left"> + isUnresolvedParadox() : boolean </td></tr>
<tr><td align="left" balign="left"> + getNextTurnState() : TurnState </td></tr>
<tr><td align="left" balign="left"> + setStatReporting(value : boolean) </td></tr>
<tr><td align="left" balign="left"> + setPowerOrderChecking(value : boolean) </td></tr>
<tr><td align="left" balign="left"> + findOrderStateBySrc(location : Location) : OrderState </td></tr>
<tr><td align="left" balign="left"> + findOrderStateBySrc(src : Province) : OrderState </td></tr>
<tr><td align="left" balign="left"> + getOrderStates() : OrderState[] </td></tr>
<tr><td align="left" balign="left"> + isSelfSupportedMove(os : OrderState) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSubstitutedOrderStates() : List </td></tr>
<tr><td align="left" balign="left"> + addResult(result : Result) </td></tr>
<tr><td align="left" balign="left"> + addBouncedResult(os : OrderState, bouncer : OrderState) </td></tr>
<tr><td align="left" balign="left"> + addDislodgedResult(os : OrderState) </td></tr>
<tr><td align="left" balign="left"> + addResult(os : OrderState, message : String) </td></tr>
<tr><td align="left" balign="left"> + addResult(os : OrderState, type : OrderResult.ResultType, message : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// dip.process.StdAdjudicator
	c5788 [label=<<table title="dip.process.StdAdjudicator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./StdAdjudicator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StdAdjudicator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + process() </td></tr>
<tr><td align="left" balign="left"> + setOrderFormat(ofo : OrderFormatOptions) </td></tr>
<tr><td align="left" balign="left"> + setStatReporting(value : boolean) </td></tr>
<tr><td align="left" balign="left"> + setPowerOrderChecking(value : boolean) </td></tr>
<tr><td align="left" balign="left"> + getOrderStates() : OrderState[] </td></tr>
<tr><td align="left" balign="left"> + getTurnState() : TurnState </td></tr>
<tr><td align="left" balign="left"> + findOrderStateBySrc(location : Location) : OrderState </td></tr>
<tr><td align="left" balign="left"> + findOrderStateBySrc(src : Province) : OrderState </td></tr>
<tr><td align="left" balign="left"> + isSelfSupportedMove(os : OrderState) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSubstitutedOrderStates() : List </td></tr>
<tr><td align="left" balign="left"> + addResult(result : Result) </td></tr>
<tr><td align="left" balign="left"> + addBouncedResult(os : OrderState, bouncer : OrderState) </td></tr>
<tr><td align="left" balign="left"> + addDislodgedResult(os : OrderState) </td></tr>
<tr><td align="left" balign="left"> + addResult(os : OrderState, message : String) </td></tr>
<tr><td align="left" balign="left"> + addResult(os : OrderState, type : OrderResult.ResultType, message : String) </td></tr>
<tr><td align="left" balign="left"> + getNextTurnState() : TurnState </td></tr>
<tr><td align="left" balign="left"> + isUnresolvedParadox() : boolean </td></tr>
<tr><td align="left" balign="left"> # verifyOrders() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//dip.process.StdAdjudicator implements dip.process.Adjudicator
	c5787:p -> c5788:p [dir=back,arrowtail=empty,style=dashed];
}

