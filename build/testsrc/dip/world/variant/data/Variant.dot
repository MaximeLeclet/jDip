#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// dip.world.variant.data.Variant
	c10966 [label=<<table title="dip.world.variant.data.Variant" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Variant.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Variant </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getAliases() : String[] </td></tr>
<tr><td align="left" balign="left"> + getVersion() : float </td></tr>
<tr><td align="left" balign="left"> + isDefault() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + getStartingPhase() : Phase </td></tr>
<tr><td align="left" balign="left"> + getInitialStates() : InitialState[] </td></tr>
<tr><td align="left" balign="left"> + getPowers() : Power[] </td></tr>
<tr><td align="left" balign="left"> + getSupplyCenters() : SupplyCenter[] </td></tr>
<tr><td align="left" balign="left"> + getNumSCForVictory() : int </td></tr>
<tr><td align="left" balign="left"> + getMaxYearsNoSCChange() : int </td></tr>
<tr><td align="left" balign="left"> + getMaxGameTimeYears() : int </td></tr>
<tr><td align="left" balign="left"> + getMapGraphics() : MapGraphic[] </td></tr>
<tr><td align="left" balign="left"> + getProvinceData() : ProvinceData[] </td></tr>
<tr><td align="left" balign="left"> + getRuleOptionNVPs() : Variant.NameValuePair[] </td></tr>
<tr><td align="left" balign="left"> + getBorderData() : BorderData[] </td></tr>
<tr><td align="left" balign="left"> + getBCYearsAllowed() : boolean </td></tr>
<tr><td align="left" balign="left"> + setName(value : String) </td></tr>
<tr><td align="left" balign="left"> + setAliases(aliases : String[]) </td></tr>
<tr><td align="left" balign="left"> + setVersion(value : float) </td></tr>
<tr><td align="left" balign="left"> + setDefault(value : boolean) </td></tr>
<tr><td align="left" balign="left"> + setDescription(value : String) </td></tr>
<tr><td align="left" balign="left"> + setStartingPhase(value : Phase) </td></tr>
<tr><td align="left" balign="left"> + setNumSCForVictory(value : int) </td></tr>
<tr><td align="left" balign="left"> + setMaxYearsNoSCChange(value : int) </td></tr>
<tr><td align="left" balign="left"> + setMaxGameTimeYears(value : int) </td></tr>
<tr><td align="left" balign="left"> + setProvinceData(value : ProvinceData[]) </td></tr>
<tr><td align="left" balign="left"> + setBorderData(value : BorderData[]) </td></tr>
<tr><td align="left" balign="left"> + setBCYearsAllowed(value : boolean) </td></tr>
<tr><td align="left" balign="left"> + setMapGraphics(mgList : List) </td></tr>
<tr><td align="left" balign="left"> + setPowers(powerList : List) </td></tr>
<tr><td align="left" balign="left"> + setInitialStates(stateList : List) </td></tr>
<tr><td align="left" balign="left"> + setSupplyCenters(supplyCenterList : List) </td></tr>
<tr><td align="left" balign="left"> + setRuleOptionNVPs(nvpList : List) </td></tr>
<tr><td align="left" balign="left"> + setActiveState(values : boolean[]) </td></tr>
<tr><td align="left" balign="left"> + compareTo(o : Object) : int </td></tr>
<tr><td align="left" balign="left"> + getMapGrapic(mgName : String) : MapGraphic </td></tr>
<tr><td align="left" balign="left"> + getDefaultMapGraphic() : MapGraphic </td></tr>
<tr><td align="left" balign="left"> + getHTMLSummaryArguments() : Object[] </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//dip.world.variant.data.Variant implements java.lang.Cloneable
	c10976:p -> c10966:p [dir=back,arrowtail=empty,style=dashed];
	//dip.world.variant.data.Variant implements java.lang.Comparable
	c10977:p -> c10966:p [dir=back,arrowtail=empty,style=dashed];
	// java.lang.Comparable
	c10977 [label=<<table title="java.lang.Comparable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Comparable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> java.lang.Comparable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + compareTo(arg0 : java.lang.Object) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.Cloneable
	c10976 [label=<<table title="java.lang.Cloneable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Cloneable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> java.lang.Cloneable </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

