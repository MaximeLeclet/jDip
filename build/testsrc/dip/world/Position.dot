#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// dip.world.Position
	c8853 [label=<<table title="dip.world.Position" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Position.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Position </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # powerMap : Map </td></tr>
<tr><td align="left" balign="left"> # provArray : Position.ProvinceData[] </td></tr>
<tr><td align="left" balign="left"> # map : Map </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + getProvinces() : Province[] </td></tr>
<tr><td align="left" balign="left"> + isEliminated(power : Power) : boolean </td></tr>
<tr><td align="left" balign="left"> + setEliminated(power : Power, value : boolean) </td></tr>
<tr><td align="left" balign="left"> + setEliminationStatus(powers : Power[]) </td></tr>
<tr><td align="left" balign="left"> + setSupplyCenterOwner(province : Province, power : Power) </td></tr>
<tr><td align="left" balign="left"> + setSupplyCenterHomePower(province : Province, power : Power) </td></tr>
<tr><td align="left" balign="left"> + hasSupplyCenterOwner(province : Province) : boolean </td></tr>
<tr><td align="left" balign="left"> + isSupplyCenterAHome(province : Province) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSupplyCenterHomePower(province : Province) : Power </td></tr>
<tr><td align="left" balign="left"> + getSupplyCenterOwner(province : Province) : Power </td></tr>
<tr><td align="left" balign="left"> + setUnit(province : Province, unit : Unit) </td></tr>
<tr><td align="left" balign="left"> + hasUnit(province : Province) : boolean </td></tr>
<tr><td align="left" balign="left"> + getUnit(province : Province) : Unit </td></tr>
<tr><td align="left" balign="left"> + hasUnit(province : Province, unitType : Unit.Type) : boolean </td></tr>
<tr><td align="left" balign="left"> + hasDislodgedUnit(province : Province, unitType : Unit.Type) : boolean </td></tr>
<tr><td align="left" balign="left"> + setDislodgedUnit(province : Province, unit : Unit) </td></tr>
<tr><td align="left" balign="left"> + getDislodgedUnit(province : Province) : Unit </td></tr>
<tr><td align="left" balign="left"> + setLastOccupier(province : Province, power : Power) </td></tr>
<tr><td align="left" balign="left"> + getLastOccupier(province : Province) : Power </td></tr>
<tr><td align="left" balign="left"> + hasDislodgedUnit(province : Province) : boolean </td></tr>
<tr><td align="left" balign="left"> + getUnitProvinces() : Province[] </td></tr>
<tr><td align="left" balign="left"> + getDislodgedUnitProvinces() : Province[] </td></tr>
<tr><td align="left" balign="left"> + getUnitCount() : int </td></tr>
<tr><td align="left" balign="left"> + getDislodgedUnitCount() : int </td></tr>
<tr><td align="left" balign="left"> + getHomeSupplyCenters() : Province[] </td></tr>
<tr><td align="left" balign="left"> + getHomeSupplyCenters(power : Power) : Province[] </td></tr>
<tr><td align="left" balign="left"> + hasAnOwnedHomeSC(power : Power) : boolean </td></tr>
<tr><td align="left" balign="left"> + getOwnedSupplyCenters(power : Power) : Province[] </td></tr>
<tr><td align="left" balign="left"> + getOwnedSupplyCenters() : Province[] </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + cloneExceptUnits() : Position </td></tr>
<tr><td align="left" balign="left"> + cloneExceptDislodged() : Position </td></tr>
<tr><td align="left" balign="left"> + getUnitProvinces(power : Power) : Province[] </td></tr>
<tr><td align="left" balign="left"> + getDislodgedUnitProvinces(power : Power) : Province[] </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//dip.world.Position implements java.io.Serializable
	c8883:p -> c8853:p [dir=back,arrowtail=empty,style=dashed];
	//dip.world.Position implements java.lang.Cloneable
	c8884:p -> c8853:p [dir=back,arrowtail=empty,style=dashed];
	// java.io.Serializable
	c8883 [label=<<table title="java.io.Serializable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/io/Serializable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> java.io.Serializable </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.Cloneable
	c8884 [label=<<table title="java.lang.Cloneable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Cloneable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> java.lang.Cloneable </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

