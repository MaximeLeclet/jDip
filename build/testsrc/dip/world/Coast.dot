#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// dip.world.Coast
	c8319 [label=<<table title="dip.world.Coast" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Coast.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Coast </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UNDEFINED : Coast </td></tr>
<tr><td align="left" balign="left"> + WING : Coast </td></tr>
<tr><td align="left" balign="left"> + NONE : Coast </td></tr>
<tr><td align="left" balign="left"> + SINGLE : Coast </td></tr>
<tr><td align="left" balign="left"> + NORTH : Coast </td></tr>
<tr><td align="left" balign="left"> + SOUTH : Coast </td></tr>
<tr><td align="left" balign="left"> + WEST : Coast </td></tr>
<tr><td align="left" balign="left"> + EAST : Coast </td></tr>
<tr><td align="left" balign="left"> + TOUCHING : Coast </td></tr>
<tr><td align="left" balign="left"> + LAND : Coast </td></tr>
<tr><td align="left" balign="left"> + SEA : Coast </td></tr>
<tr><td align="left" balign="left"> + NOT_DISPLAYED : Coast[] </td></tr>
<tr><td align="left" balign="left"> + ALL_COASTS : Coast[] </td></tr>
<tr><td align="left" balign="left"> + ANY_SEA : Coast[] </td></tr>
<tr><td align="left" balign="left"> + ANY_DIRECTIONAL : Coast[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getAbbreviation() : String </td></tr>
<tr><td align="left" balign="left"> + getIndex() : int </td></tr>
<tr><td align="left" balign="left"> + getCoast(idx : int) : Coast </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + isDisplayable(coast : Coast) : boolean </td></tr>
<tr><td align="left" balign="left"> + parse(text : String) : Coast </td></tr>
<tr><td align="left" balign="left"> + getProvinceName(input : String) : String </td></tr>
<tr><td align="left" balign="left"> + normalize(input : String) : String </td></tr>
<tr><td align="left" balign="left"> + isDirectional() : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> # readResolve() : Object </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//dip.world.Coast implements java.io.Serializable
	c8354:p -> c8319:p [dir=back,arrowtail=empty,style=dashed];
	// java.io.Serializable
	c8354 [label=<<table title="java.io.Serializable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/io/Serializable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> java.io.Serializable </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

