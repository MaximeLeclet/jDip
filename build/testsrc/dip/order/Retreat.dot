#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// dip.order.Move
	c4621 [label=<<table title="dip.order.Move" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Move.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Move </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # dest : Location </td></tr>
<tr><td align="left" balign="left"> # convoyRoutes : ArrayList </td></tr>
<tr><td align="left" balign="left"> # _isViaConvoy : boolean </td></tr>
<tr><td align="left" balign="left"> # _isConvoyIntent : boolean </td></tr>
<tr><td align="left" balign="left"> # _isAdjWithPossibleConvoy : boolean </td></tr>
<tr><td align="left" balign="left"> # _fmtIsAdjWithConvoy : boolean </td></tr>
<tr><td align="left" balign="left"> # _hasLandRoute : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getDest() : Location </td></tr>
<tr><td align="left" balign="left"> + isViaConvoy() : boolean </td></tr>
<tr><td align="left" balign="left"> + isAdjWithPossibleConvoy() : boolean </td></tr>
<tr><td align="left" balign="left"> + isConvoyIntent() : boolean </td></tr>
<tr><td align="left" balign="left"> + isConvoying() : boolean </td></tr>
<tr><td align="left" balign="left"> + getConvoyRoute() : Province[] </td></tr>
<tr><td align="left" balign="left"> + getConvoyRoutes() : List </td></tr>
<tr><td align="left" balign="left"> + getFullName() : String </td></tr>
<tr><td align="left" balign="left"> + getBriefName() : String </td></tr>
<tr><td align="left" balign="left"> + getDefaultFormat() : String </td></tr>
<tr><td align="left" balign="left"> + toBriefString() : String </td></tr>
<tr><td align="left" balign="left"> + toFullString() : String </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(state : TurnState, valOpts : ValidationOptions, ruleOpts : RuleOptions) </td></tr>
<tr><td align="left" balign="left"> # validateTheoreticalConvoyRoute(position : Position) </td></tr>
<tr><td align="left" balign="left"> # formatConvoyRoute(route : Province[], isBrief : boolean, useHyphen : boolean) : String </td></tr>
<tr><td align="left" balign="left"> # formatConvoyRoute(sb : StringBuffer, route : Province[], isBrief : boolean, useHyphen : boolean) </td></tr>
<tr><td align="left" balign="left"> + verify(adjudicator : Adjudicator) </td></tr>
<tr><td align="left" balign="left"> + determineDependencies(adjudicator : Adjudicator) </td></tr>
<tr><td align="left" balign="left"> + evaluate(adjudicator : Adjudicator) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// dip.order.Retreat
	c4629 [label=<<table title="dip.order.Retreat" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Retreat.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Retreat </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + isByConvoy() : boolean </td></tr>
<tr><td align="left" balign="left"> + getFullName() : String </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + validate(state : TurnState, valOpts : ValidationOptions, ruleOpts : RuleOptions) </td></tr>
<tr><td align="left" balign="left"> + verify(adjudicator : Adjudicator) </td></tr>
<tr><td align="left" balign="left"> + determineDependencies(adjudicator : Adjudicator) </td></tr>
<tr><td align="left" balign="left"> + evaluate(adjudicator : Adjudicator) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//dip.order.Retreat extends dip.order.Move
	c4621:p -> c4629:p [dir=back,arrowtail=empty];
}

